// <auto-generated />
using System;
using DataAccess.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(MoviePortalContext))]
    [Migration("20220421121535_SeedingDataTEST")]
    partial class SeedingDataTEST
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Models.DbCreativePersonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Name");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Surname");

                    b.HasKey("Id");

                    b.ToTable("CreativePersons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sylvester",
                            Role = 1,
                            SurName = "Stallone"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ted",
                            Role = 0,
                            SurName = "Kotcheff"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.DbMovieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("Nie dodano jeszcze żadnego opisu.");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<bool>("IsForKids")
                        .HasColumnType("bit");

                    b.Property<int>("ProductionYear")
                        .HasMaxLength(2022)
                        .HasColumnType("int")
                        .HasColumnName("Release Date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "John Rambo, były komandos, weteran wojny w Wietnamie, naraża się policjantom z pewnego miasteczka. Ci nie wiedzą, jak groźnym przeciwnikiem jest ten włóczęga.",
                            Genre = 0,
                            IsForKids = false,
                            ProductionYear = 1982,
                            Title = "Rambo"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.MovieCreativePerson", b =>
                {
                    b.Property<int>("CreativePersonId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("CreativePersonId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Movie_CreativePersons");

                    b.HasData(
                        new
                        {
                            CreativePersonId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            CreativePersonId = 2,
                            MovieId = 1
                        });
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.MovieCreativePerson", b =>
                {
                    b.HasOne("DataAccess.Models.DbCreativePersonModel", "CreativePerson")
                        .WithMany("MovieCreativePersons")
                        .HasForeignKey("CreativePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.DbMovieModel", "Movie")
                        .WithMany("MovieCreativeRoles")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreativePerson");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DataAccess.Models.DbCreativePersonModel", b =>
                {
                    b.Navigation("MovieCreativePersons");
                });

            modelBuilder.Entity("DataAccess.Models.DbMovieModel", b =>
                {
                    b.Navigation("MovieCreativeRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
