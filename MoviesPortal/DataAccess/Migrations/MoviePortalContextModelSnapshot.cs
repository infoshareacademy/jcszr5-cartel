// <auto-generated />
using System;
using DataAccess.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(MoviePortalContext))]
    partial class MoviePortalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DataAccess.Models.CreativePersonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Name");

                    b.Property<string>("PhotographyPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Surname");

                    b.HasKey("Id");

                    b.ToTable("CreativePersons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1946, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sylvester",
                            PhotographyPath = "https://i.pinimg.com/originals/be/8f/3d/be8f3dfb132eb1b867379235d75a37b1.jpg",
                            SurName = "Stallone"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1977, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tom",
                            PhotographyPath = "https://i.pinimg.com/originals/9d/73/d6/9d73d68e972ef3fd416f38c780e901ff.jpg",
                            SurName = "Hardy"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1983, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chris",
                            PhotographyPath = "https://i.pinimg.com/originals/13/62/b3/1362b30b97ed513559b4f28a5a3823f2.png",
                            SurName = "Hemsworth"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1976, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cillian",
                            PhotographyPath = "https://i.pinimg.com/originals/cc/9a/3c/cc9a3cb9e0cd36b322a4491875c16be0.png",
                            SurName = "Murphy"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1975, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Taika",
                            PhotographyPath = "https://i.pinimg.com/originals/74/e4/a5/74e4a59cb0e2a110166fd2eef714ad37.jpg",
                            SurName = "Waititi"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1931, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ted",
                            PhotographyPath = "https://tce-live2.s3.amazonaws.com/media/media/74b70c1f-c4c4-4b77-9c6f-114cb1d62fdb.jpg",
                            SurName = "Kotcheff"
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(1970, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christopher",
                            PhotographyPath = "https://i.pinimg.com/736x/c7/c4/84/c7c484a0a51dd210405148c1f933ab54.jpg",
                            SurName = "Nolan"
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateTime(1969, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cate",
                            PhotographyPath = "https://i.pinimg.com/originals/d5/23/75/d52375bb559b121f8221877db8b653a8.jpg",
                            SurName = "Blanchett"
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateTime(1981, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tom",
                            PhotographyPath = "https://i.redd.it/r9ytchitgnu01.jpg",
                            SurName = "Hiddleston"
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateTime(1972, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Idris",
                            PhotographyPath = "https://static.stereogum.com/uploads/2014/09/Idris-Elba.jpg",
                            SurName = "Elba"
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = new DateTime(1965, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Robert",
                            PhotographyPath = "https://i.pinimg.com/originals/26/ec/2c/26ec2c71b16085720e0f21f22f074999.jpg",
                            SurName = "Downey Jr."
                        },
                        new
                        {
                            Id = 12,
                            DateOfBirth = new DateTime(1971, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Joe",
                            PhotographyPath = "https://m.media-amazon.com/images/M/MV5BMTc2NzY1NTY5OF5BMl5BanBnXkFtZTgwNjY3ODczNjM@._V1_.jpg",
                            SurName = "Russo"
                        },
                        new
                        {
                            Id = 13,
                            DateOfBirth = new DateTime(1970, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anthony",
                            PhotographyPath = "https://m.media-amazon.com/images/M/MV5BMTc2NjM5MTM0Ml5BMl5BanBnXkFtZTgwMTY3ODczNjM@._V1_.jpg",
                            SurName = "Russo"
                        },
                        new
                        {
                            Id = 14,
                            DateOfBirth = new DateTime(1984, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scarlett",
                            PhotographyPath = "https://i.pinimg.com/originals/29/f7/b2/29f7b250f36d1758a7015e062c39b180.jpg",
                            SurName = "Johansson"
                        },
                        new
                        {
                            Id = 15,
                            DateOfBirth = new DateTime(1981, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chris",
                            PhotographyPath = "https://images.mubicdn.net/images/cast_member/32256/cache-2145-1600710858/image-w856.jpg?size=800x",
                            SurName = "Evans"
                        },
                        new
                        {
                            Id = 16,
                            DateOfBirth = new DateTime(1996, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tom",
                            PhotographyPath = "https://cdn.lifestyleasia.com/wp-content/uploads/sites/7/2022/01/19151605/125891247_439627203697586_8066488800487655769_n.jpg",
                            SurName = "Holland"
                        },
                        new
                        {
                            Id = 17,
                            DateOfBirth = new DateTime(1976, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Benedict",
                            PhotographyPath = "https://images.prismic.io/netflix-queue/8e7ebecd-0a79-4517-93e5-c2828603c6fb_SH21091+NFX+09B_01+IV+RGB.jpg?auto=compress,format&rect=33,0,1013,1350&w=2000&h=2666",
                            SurName = "Cumberbatch"
                        },
                        new
                        {
                            Id = 18,
                            DateOfBirth = new DateTime(1971, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paul",
                            PhotographyPath = "https://pbs.twimg.com/media/CIpuOJoUYAA_U1e.jpg",
                            SurName = "Bettany"
                        },
                        new
                        {
                            Id = 19,
                            DateOfBirth = new DateTime(1989, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elizabeth",
                            PhotographyPath = "https://m.media-amazon.com/images/M/MV5BMTZmYjFmNzItMDk4YS00NWE0LThkZmMtMmRkYzFmODVhOGU1XkEyXkFqcGdeQXVyMTU3NTQyMTg@._V1_.jpg",
                            SurName = "Olsen"
                        },
                        new
                        {
                            Id = 20,
                            DateOfBirth = new DateTime(1969, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Spike",
                            PhotographyPath = "https://cdn.gracza.pl/galeria/mdb/o/116997531.jpg",
                            SurName = "Jonze"
                        },
                        new
                        {
                            Id = 21,
                            DateOfBirth = new DateTime(1974, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Joaquin",
                            PhotographyPath = "https://www.interviewmagazine.com/wp-content/uploads/2015/03/img-star---joaquin-phoenix_152859450894-814x1000.jpg",
                            SurName = "Phoenix"
                        },
                        new
                        {
                            Id = 22,
                            DateOfBirth = new DateTime(1974, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amy",
                            PhotographyPath = "https://i.pinimg.com/originals/8e/09/9b/8e099b26d870e3577e730a9c61e0d355.jpg",
                            SurName = "Adams"
                        },
                        new
                        {
                            Id = 23,
                            DateOfBirth = new DateTime(1974, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christian",
                            PhotographyPath = "https://i.pinimg.com/originals/47/87/fe/4787fe17d62edd2901c0c9b9056a9637.jpg",
                            SurName = "Bale"
                        },
                        new
                        {
                            Id = 24,
                            DateOfBirth = new DateTime(1979, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Heath",
                            PhotographyPath = "https://i.pinimg.com/originals/aa/d2/0c/aad20c5c81fba355f879cec1f18f1bce.jpg",
                            SurName = "Ledger"
                        },
                        new
                        {
                            Id = 25,
                            DateOfBirth = new DateTime(1969, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Matthew",
                            PhotographyPath = "https://i.pinimg.com/originals/e9/7e/f2/e97ef25eb772ba0b04bc9ee6826d1552.jpg",
                            SurName = "McConaughey"
                        },
                        new
                        {
                            Id = 26,
                            DateOfBirth = new DateTime(1982, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anne",
                            PhotographyPath = "https://i.pinimg.com/originals/17/4e/2c/174e2ce83ea42b6fd971a773cbd5c45d.jpg",
                            SurName = "Hathaway"
                        },
                        new
                        {
                            Id = 27,
                            DateOfBirth = new DateTime(1977, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jessica",
                            PhotographyPath = "https://c4.wallpaperflare.com/wallpaper/728/39/584/women-actress-jessica-chastain-white-coat-wallpaper-preview.jpg",
                            SurName = "Chastain"
                        },
                        new
                        {
                            Id = 28,
                            DateOfBirth = new DateTime(1942, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Harrison",
                            PhotographyPath = "https://i.pinimg.com/564x/4d/56/69/4d56692bc2b42418dc78693123dc2a31.jpg",
                            SurName = "Ford"
                        },
                        new
                        {
                            Id = 29,
                            DateOfBirth = new DateTime(1951, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mark",
                            PhotographyPath = "https://i.pinimg.com/originals/0e/11/75/0e117523130725aae5a4b6e49a7d8787.png",
                            SurName = "Hamill"
                        },
                        new
                        {
                            Id = 30,
                            DateOfBirth = new DateTime(1956, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Carrie",
                            PhotographyPath = "https://i.pinimg.com/originals/b5/db/f8/b5dbf8637c0f5787d26916cc04097d09.jpg",
                            SurName = "Fisher"
                        },
                        new
                        {
                            Id = 31,
                            DateOfBirth = new DateTime(1914, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alec",
                            PhotographyPath = "https://i.pinimg.com/736x/5c/00/a3/5c00a3d0575ebc6bc6c99c41896d3f37.jpg",
                            SurName = "Guinness"
                        },
                        new
                        {
                            Id = 32,
                            DateOfBirth = new DateTime(1931, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "James",
                            PhotographyPath = "https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F20%2F2022%2F01%2F14%2Fjames-earl-jones-21-2000.jpg",
                            SurName = "Earl Jones"
                        },
                        new
                        {
                            Id = 33,
                            DateOfBirth = new DateTime(1944, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "George",
                            PhotographyPath = "https://i.pinimg.com/originals/4a/a2/8d/4aa28ddad9d7b00ef950ac24a94dca1a.jpg",
                            SurName = "Lucas"
                        },
                        new
                        {
                            Id = 34,
                            DateOfBirth = new DateTime(1923, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Irvin",
                            PhotographyPath = "https://upload.wikimedia.org/wikipedia/en/f/f7/Irvin_Kershner.jpg",
                            SurName = "Kershner"
                        },
                        new
                        {
                            Id = 35,
                            DateOfBirth = new DateTime(1937, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Richard",
                            PhotographyPath = "https://m.media-amazon.com/images/M/MV5BMjgwY2ZkYjEtNzgxZi00ZDIyLWJhZWItZjg1NGQ4OWE5ZTZhXkEyXkFqcGdeQXVyNjUwNzk3NDc@._V1_.jpg",
                            SurName = "Marquand"
                        },
                        new
                        {
                            Id = 36,
                            DateOfBirth = new DateTime(1946, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Steven",
                            PhotographyPath = "https://i.pinimg.com/736x/e2/5a/5c/e25a5c78c5077d6e78793fc720eb78cb.jpg",
                            SurName = "Spielberg"
                        },
                        new
                        {
                            Id = 37,
                            DateOfBirth = new DateTime(1951, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Karen",
                            PhotographyPath = "https://i.pinimg.com/originals/22/54/7a/22547ac8ae5f59ad0d5fa156127781b4.jpg",
                            SurName = "Allen"
                        },
                        new
                        {
                            Id = 38,
                            DateOfBirth = new DateTime(1944, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John",
                            PhotographyPath = "https://www.flowee.cz/images/.thumbnails/images/misa_2020/unor_2020/gimli_box-0467378879.500x546cg.jpg",
                            SurName = "Rhys-Davies"
                        },
                        new
                        {
                            Id = 39,
                            DateOfBirth = new DateTime(1930, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sean",
                            PhotographyPath = "https://i.pinimg.com/originals/0e/01/c8/0e01c867c9a1fa680c741f32d1f8878a.jpg",
                            SurName = "Connery"
                        },
                        new
                        {
                            Id = 40,
                            DateOfBirth = new DateTime(1962, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "David",
                            PhotographyPath = "https://i.pinimg.com/originals/ff/e7/09/ffe709086a975b0f38338fe63182a299.png",
                            SurName = "Fincher"
                        },
                        new
                        {
                            Id = 41,
                            DateOfBirth = new DateTime(1963, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Brad",
                            PhotographyPath = "https://bi.im-g.pl/im/cd/52/18/z25503949IH,Brad-Pitt-w-New-York-Times.jpg",
                            SurName = "Pitt"
                        },
                        new
                        {
                            Id = 42,
                            DateOfBirth = new DateTime(1969, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edward",
                            PhotographyPath = "https://www.interviewmagazine.com/wp-content/uploads/2014/10/img-edward-norton_233002559555.jpg",
                            SurName = "Norton"
                        },
                        new
                        {
                            Id = 43,
                            DateOfBirth = new DateTime(1959, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kevin",
                            PhotographyPath = "https://i.pinimg.com/originals/a7/32/c0/a732c0f7d2f7c1d60e07b9794811f3e4.jpg",
                            SurName = "Spacey"
                        },
                        new
                        {
                            Id = 44,
                            DateOfBirth = new DateTime(1937, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Morgan",
                            PhotographyPath = "https://i.pinimg.com/564x/9f/76/e8/9f76e87c8d4812916c7aec060a88c469--supporting-actor-morgan-freeman.jpg",
                            SurName = "Freeman"
                        },
                        new
                        {
                            Id = 45,
                            DateOfBirth = new DateTime(1983, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jesse",
                            PhotographyPath = "https://www4.pictures.zimbio.com/gi/Vivarium+Photocall+vnyP7s1-p9zx.jpg",
                            SurName = "Eisenberg"
                        },
                        new
                        {
                            Id = 46,
                            DateOfBirth = new DateTime(1983, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Andrew",
                            PhotographyPath = "https://data.whicdn.com/images/4749775/original.jpg",
                            SurName = "Garfield"
                        },
                        new
                        {
                            Id = 47,
                            DateOfBirth = new DateTime(1980, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jake",
                            PhotographyPath = "https://i.pinimg.com/originals/00/be/20/00be20ddd9db763008a37e6c54e7a801.jpg",
                            SurName = "Gyllenhaal"
                        },
                        new
                        {
                            Id = 48,
                            DateOfBirth = new DateTime(1967, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mark",
                            PhotographyPath = "https://i.pinimg.com/550x/e0/3b/17/e03b17c2cbb0f2ad648db40ca5eba9dd.jpg",
                            SurName = "Ruffalo"
                        },
                        new
                        {
                            Id = 49,
                            DateOfBirth = new DateTime(1959, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sam",
                            PhotographyPath = "https://cdn.gracza.pl/galeria/mdb/o/542286000.jpg",
                            SurName = "Raimi"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.Movie_CreativeP_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreativePersonId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreativePersonId");

                    b.HasIndex("MovieId");

                    b.HasIndex("RoleId");

                    b.ToTable("Role_CreativeP_Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreativePersonId = 1,
                            MovieId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreativePersonId = 6,
                            MovieId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreativePersonId = 3,
                            MovieId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreativePersonId = 9,
                            MovieId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreativePersonId = 8,
                            MovieId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreativePersonId = 10,
                            MovieId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreativePersonId = 5,
                            MovieId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreativePersonId = 5,
                            MovieId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreativePersonId = 2,
                            MovieId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreativePersonId = 4,
                            MovieId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreativePersonId = 7,
                            MovieId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreativePersonId = 3,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreativePersonId = 9,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreativePersonId = 10,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreativePersonId = 11,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreativePersonId = 14,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreativePersonId = 15,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 18,
                            CreativePersonId = 16,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 19,
                            CreativePersonId = 17,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreativePersonId = 18,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreativePersonId = 19,
                            MovieId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 22,
                            CreativePersonId = 13,
                            MovieId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 23,
                            CreativePersonId = 12,
                            MovieId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 24,
                            CreativePersonId = 11,
                            MovieId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 25,
                            CreativePersonId = 14,
                            MovieId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 26,
                            CreativePersonId = 15,
                            MovieId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 27,
                            CreativePersonId = 16,
                            MovieId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 28,
                            CreativePersonId = 18,
                            MovieId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreativePersonId = 19,
                            MovieId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 30,
                            CreativePersonId = 12,
                            MovieId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 31,
                            CreativePersonId = 13,
                            MovieId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 32,
                            CreativePersonId = 28,
                            MovieId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 33,
                            CreativePersonId = 29,
                            MovieId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 34,
                            CreativePersonId = 30,
                            MovieId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 35,
                            CreativePersonId = 31,
                            MovieId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 36,
                            CreativePersonId = 32,
                            MovieId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 37,
                            CreativePersonId = 33,
                            MovieId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 38,
                            CreativePersonId = 28,
                            MovieId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 39,
                            CreativePersonId = 29,
                            MovieId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 40,
                            CreativePersonId = 30,
                            MovieId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 41,
                            CreativePersonId = 31,
                            MovieId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 42,
                            CreativePersonId = 32,
                            MovieId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 43,
                            CreativePersonId = 34,
                            MovieId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 44,
                            CreativePersonId = 28,
                            MovieId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 45,
                            CreativePersonId = 29,
                            MovieId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 46,
                            CreativePersonId = 30,
                            MovieId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 47,
                            CreativePersonId = 31,
                            MovieId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 48,
                            CreativePersonId = 32,
                            MovieId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 49,
                            CreativePersonId = 35,
                            MovieId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 50,
                            CreativePersonId = 28,
                            MovieId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 51,
                            CreativePersonId = 37,
                            MovieId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 52,
                            CreativePersonId = 38,
                            MovieId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 53,
                            CreativePersonId = 36,
                            MovieId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 54,
                            CreativePersonId = 28,
                            MovieId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 55,
                            CreativePersonId = 38,
                            MovieId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 56,
                            CreativePersonId = 39,
                            MovieId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 57,
                            CreativePersonId = 36,
                            MovieId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 58,
                            CreativePersonId = 25,
                            MovieId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 59,
                            CreativePersonId = 26,
                            MovieId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 60,
                            CreativePersonId = 27,
                            MovieId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 61,
                            CreativePersonId = 7,
                            MovieId = 11,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 62,
                            CreativePersonId = 4,
                            MovieId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 63,
                            CreativePersonId = 23,
                            MovieId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 64,
                            CreativePersonId = 24,
                            MovieId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 65,
                            CreativePersonId = 7,
                            MovieId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 66,
                            CreativePersonId = 14,
                            MovieId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 67,
                            CreativePersonId = 21,
                            MovieId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 68,
                            CreativePersonId = 22,
                            MovieId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 69,
                            CreativePersonId = 20,
                            MovieId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 70,
                            CreativePersonId = 41,
                            MovieId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 71,
                            CreativePersonId = 42,
                            MovieId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 72,
                            CreativePersonId = 40,
                            MovieId = 14,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 73,
                            CreativePersonId = 44,
                            MovieId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 74,
                            CreativePersonId = 43,
                            MovieId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 75,
                            CreativePersonId = 41,
                            MovieId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 76,
                            CreativePersonId = 40,
                            MovieId = 15,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 77,
                            CreativePersonId = 45,
                            MovieId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 78,
                            CreativePersonId = 46,
                            MovieId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 79,
                            CreativePersonId = 40,
                            MovieId = 16,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 80,
                            CreativePersonId = 48,
                            MovieId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 81,
                            CreativePersonId = 11,
                            MovieId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 82,
                            CreativePersonId = 47,
                            MovieId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 83,
                            CreativePersonId = 40,
                            MovieId = 17,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 84,
                            CreativePersonId = 17,
                            MovieId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 85,
                            CreativePersonId = 19,
                            MovieId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 86,
                            CreativePersonId = 49,
                            MovieId = 18,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.MovieGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("Movie_Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 10,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 4,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 1,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 5,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 7,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 1,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 4,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 1,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 13,
                            GenreId = 2,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 14,
                            GenreId = 4,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 15,
                            GenreId = 1,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 16,
                            GenreId = 2,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 17,
                            GenreId = 6,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 18,
                            GenreId = 7,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 19,
                            GenreId = 1,
                            MovieId = 7
                        },
                        new
                        {
                            Id = 20,
                            GenreId = 2,
                            MovieId = 7
                        },
                        new
                        {
                            Id = 21,
                            GenreId = 6,
                            MovieId = 7
                        },
                        new
                        {
                            Id = 22,
                            GenreId = 9,
                            MovieId = 7
                        },
                        new
                        {
                            Id = 23,
                            GenreId = 1,
                            MovieId = 8
                        },
                        new
                        {
                            Id = 24,
                            GenreId = 2,
                            MovieId = 8
                        },
                        new
                        {
                            Id = 25,
                            GenreId = 6,
                            MovieId = 8
                        },
                        new
                        {
                            Id = 26,
                            GenreId = 9,
                            MovieId = 8
                        },
                        new
                        {
                            Id = 27,
                            GenreId = 1,
                            MovieId = 9
                        },
                        new
                        {
                            Id = 28,
                            GenreId = 2,
                            MovieId = 9
                        },
                        new
                        {
                            Id = 29,
                            GenreId = 6,
                            MovieId = 9
                        },
                        new
                        {
                            Id = 30,
                            GenreId = 1,
                            MovieId = 10
                        },
                        new
                        {
                            Id = 31,
                            GenreId = 2,
                            MovieId = 10
                        },
                        new
                        {
                            Id = 32,
                            GenreId = 6,
                            MovieId = 10
                        },
                        new
                        {
                            Id = 33,
                            GenreId = 2,
                            MovieId = 11
                        },
                        new
                        {
                            Id = 34,
                            GenreId = 5,
                            MovieId = 11
                        },
                        new
                        {
                            Id = 35,
                            GenreId = 9,
                            MovieId = 11
                        },
                        new
                        {
                            Id = 36,
                            GenreId = 1,
                            MovieId = 12
                        },
                        new
                        {
                            Id = 37,
                            GenreId = 5,
                            MovieId = 12
                        },
                        new
                        {
                            Id = 38,
                            GenreId = 5,
                            MovieId = 13
                        },
                        new
                        {
                            Id = 39,
                            GenreId = 9,
                            MovieId = 13
                        },
                        new
                        {
                            Id = 40,
                            GenreId = 5,
                            MovieId = 14
                        },
                        new
                        {
                            Id = 41,
                            GenreId = 10,
                            MovieId = 14
                        },
                        new
                        {
                            Id = 42,
                            GenreId = 5,
                            MovieId = 15
                        },
                        new
                        {
                            Id = 43,
                            GenreId = 10,
                            MovieId = 15
                        },
                        new
                        {
                            Id = 44,
                            GenreId = 5,
                            MovieId = 16
                        },
                        new
                        {
                            Id = 45,
                            GenreId = 10,
                            MovieId = 16
                        },
                        new
                        {
                            Id = 46,
                            GenreId = 5,
                            MovieId = 17
                        },
                        new
                        {
                            Id = 47,
                            GenreId = 10,
                            MovieId = 17
                        },
                        new
                        {
                            Id = 48,
                            GenreId = 1,
                            MovieId = 18
                        },
                        new
                        {
                            Id = 50,
                            GenreId = 2,
                            MovieId = 18
                        },
                        new
                        {
                            Id = 51,
                            GenreId = 8,
                            MovieId = 18
                        });
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.TvSeries_CreativeP_Role", b =>
                {
                    b.Property<int>("TvSeriesId")
                        .HasColumnType("int");

                    b.Property<int>("CreativePersonId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("TvSeriesId", "CreativePersonId", "RoleId");

                    b.HasIndex("CreativePersonId");

                    b.HasIndex("RoleId");

                    b.ToTable("TvSeries_CreativeP_Role");
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.TvSeriesGenre", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("TvSeriesId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "TvSeriesId");

                    b.HasIndex("TvSeriesId");

                    b.ToTable("TvSeries_Genre");
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.UserFavoriteMovies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFavoriteMovies");
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.UserFavoriteTvSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TvSeriesId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TvSeriesId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFavoriteTvSeries");
                });

            modelBuilder.Entity("DataAccess.Models.EpisodeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("DataAccess.Models.GenreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "action"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "adventure"
                        },
                        new
                        {
                            Id = 3,
                            Genre = "animated"
                        },
                        new
                        {
                            Id = 4,
                            Genre = "comedy"
                        },
                        new
                        {
                            Id = 5,
                            Genre = "drama"
                        },
                        new
                        {
                            Id = 6,
                            Genre = "fantasy"
                        },
                        new
                        {
                            Id = 7,
                            Genre = "historical"
                        },
                        new
                        {
                            Id = 8,
                            Genre = "horror"
                        },
                        new
                        {
                            Id = 9,
                            Genre = "sciFi"
                        },
                        new
                        {
                            Id = 10,
                            Genre = "thriller"
                        },
                        new
                        {
                            Id = 11,
                            Genre = "western"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.MovieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BackgroundPoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Nie dodano jeszcze żadnego opisu.");

                    b.Property<string>("ImdbRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsForKids")
                        .HasColumnType("bit");

                    b.Property<string>("PosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionYear")
                        .HasMaxLength(2022)
                        .HasColumnType("int")
                        .HasColumnName("Release Date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackgroundPoster = "https://c4.wallpaperflare.com/wallpaper/1012/513/237/action-adventure-drama-film-wallpaper-preview.jpg",
                            Description = "A veteran Green Beret is forced by a cruel Sheriff and his deputies to flee into the mountains and wage an escalating one-man war against his pursuers.",
                            ImdbRatio = "7.7",
                            IsForKids = false,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2015/03/gabz_firstblood700.jpg",
                            ProductionYear = 1982,
                            Title = "Rambo: First Blood",
                            TrailerUrl = "https://www.youtube.com/watch?v=IAqLKlxY3Eo"
                        },
                        new
                        {
                            Id = 2,
                            BackgroundPoster = "https://images.hdqwalls.com/wallpapers/art-thor-ragnarok-we.jpg",
                            Description = "Imprisoned on the planet Sakaar, Thor must race against time to return to Asgard and stop Ragnarök, the destruction of his world, at the hands of the powerful and ruthless villain Hela.",
                            ImdbRatio = "7.9",
                            IsForKids = true,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2020/06/Juan-Ramos_thorragnarok.jpg",
                            ProductionYear = 2017,
                            Title = "Thor: Ragnarok",
                            TrailerUrl = "https://www.youtube.com/watch?v=ue80QwXMRHg"
                        },
                        new
                        {
                            Id = 3,
                            BackgroundPoster = "https://wallpaperaccess.com/full/3528110.jpg",
                            Description = "Allied soldiers from Belgium, the British Commonwealth and Empire, and France are surrounded by the German Army and evacuated during a fierce battle in World War II.",
                            ImdbRatio = "7.8",
                            IsForKids = false,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2019/10/duperray_dunkirk.jpg",
                            ProductionYear = 2017,
                            Title = "Dunkirk",
                            TrailerUrl = "https://www.youtube.com/watch?v=F-eMt3SrfFU"
                        },
                        new
                        {
                            Id = 4,
                            BackgroundPoster = "https://blog.hdwallsource.com/wp-content/uploads/2018/05/avengers-infinity-war-thanos-wallpaper-63589-65679-hd-wallpapers.jpg",
                            Description = "The Avengers and their allies must be willing to sacrifice all in an attempt to defeat the powerful Thanos before his blitz of devastation and ruin puts an end to the universe.",
                            ImdbRatio = "8.4",
                            IsForKids = true,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2018/05/bergeron_infinity.jpg",
                            ProductionYear = 2018,
                            Title = "Avengers: Infinity War",
                            TrailerUrl = "https://www.youtube.com/watch?v=6ZfuNTqbHE8"
                        },
                        new
                        {
                            Id = 5,
                            BackgroundPoster = "https://images7.alphacoders.com/100/1004126.png",
                            Description = "Political involvement in the Avengers' affairs causes a rift between Captain America and Iron Man.",
                            ImdbRatio = "7.8",
                            IsForKids = true,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2016/06/walker_civilwar.jpg",
                            ProductionYear = 2016,
                            Title = "Captain America: Civil War",
                            TrailerUrl = "https://www.youtube.com/watch?v=dKrVegVI0Us"
                        },
                        new
                        {
                            Id = 6,
                            BackgroundPoster = "https://images2.alphacoders.com/523/thumb-1920-523274.jpg",
                            Description = "Luke Skywalker joins forces with a Jedi Knight, a cocky pilot, a Wookiee and two droids to save the galaxy from the Empire's world-destroying battle station, while also attempting to rescue Princess Leia from the mysterious Darth Vader.",
                            ImdbRatio = "8.6",
                            IsForKids = true,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2021/12/AlexHovey_NewHope.jpg",
                            ProductionYear = 1977,
                            Title = "Star Wars: Episode IV - New Hope",
                            TrailerUrl = "https://www.youtube.com/watch?v=vZ734NWnAHA"
                        },
                        new
                        {
                            Id = 7,
                            BackgroundPoster = "https://wallpaperaccess.com/full/1602841.jpg",
                            Description = "After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued across the galaxy by Darth Vader and bounty hunter Boba Fett.",
                            ImdbRatio = "8.7",
                            IsForKids = true,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2021/12/AlexHovey_Empire.jpg",
                            ProductionYear = 1980,
                            Title = "Star Wars: Episode V - The Empire Strikes Back",
                            TrailerUrl = "https://www.youtube.com/watch?v=JNwNXF9Y6kY"
                        },
                        new
                        {
                            Id = 8,
                            BackgroundPoster = "https://images5.alphacoders.com/339/thumb-1920-339210.jpg",
                            Description = "After a daring mission to rescue Han Solo from Jabba the Hutt, the Rebels dispatch to Endor to destroy the second Death Star. Meanwhile, Luke struggles to help Darth Vader back from the dark side without falling into the Emperor's trap.",
                            ImdbRatio = "8.3",
                            IsForKids = true,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2021/12/AlexHovey_Jedi.jpg",
                            ProductionYear = 1983,
                            Title = "Star Wars: Episode VI - Return of the Jedi",
                            TrailerUrl = "https://www.youtube.com/watch?v=5UfA_aKBGMc"
                        },
                        new
                        {
                            Id = 9,
                            BackgroundPoster = "https://images2.alphacoders.com/865/thumb-1920-86520.jpg",
                            Description = "In 1936, archaeologist and adventurer Indiana Jones is hired by the U.S. government to find the Ark of the Covenant before Adolf Hitler's Nazis can obtain its awesome powers.",
                            ImdbRatio = "8.4",
                            IsForKids = true,
                            PosterPath = "https://i.pinimg.com/originals/f2/87/36/f28736d093de503e783c4bf247230cb3.jpg",
                            ProductionYear = 1981,
                            Title = "Raiders of the Lost Ark",
                            TrailerUrl = "https://www.youtube.com/watch?v=0xQSIdSRlAk"
                        },
                        new
                        {
                            Id = 10,
                            BackgroundPoster = "https://wallpapercave.com/wp/wp4119239.jpg",
                            Description = "In 1938, after his father Professor Henry Jones, Sr. goes missing while pursuing the Holy Grail, Professor Henry 'Indiana' Jones, Jr. finds himself up against Adolf Hitler's Nazis again to stop them from obtaining its powers.",
                            ImdbRatio = "8.2",
                            IsForKids = true,
                            PosterPath = "https://static.squarespace.com/static/51b3dc8ee4b051b96ceb10de/51ce6099e4b0d911b4489b79/51ce61e9e4b0d911b44a5773/1328897573177/1000w/temple-of-doom-minimalist-print.jpg",
                            ProductionYear = 1989,
                            Title = "Indiana Jones and the Last Crusade",
                            TrailerUrl = "https://www.youtube.com/watch?v=DKg36LBVgfg"
                        },
                        new
                        {
                            Id = 11,
                            BackgroundPoster = "https://images5.alphacoders.com/585/thumb-1920-585645.png",
                            Description = "A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.",
                            ImdbRatio = "8.6",
                            IsForKids = true,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2020/05/daus_interstellar.jpg",
                            ProductionYear = 2014,
                            Title = "Interstellar",
                            TrailerUrl = "https://www.youtube.com/watch?v=zSWdZVtXT7E"
                        },
                        new
                        {
                            Id = 12,
                            BackgroundPoster = "https://images.hdqwalls.com/wallpapers/the-dark-knight-aftermath-4k-yk.jpg",
                            Description = "When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.",
                            ImdbRatio = "9.0",
                            IsForKids = false,
                            PosterPath = "https://cdn.shopify.com/s/files/1/0071/5192/products/Screen_Shot_2017-12-06_at_17.45.00_1024x1024.png?v=1512583353",
                            ProductionYear = 2008,
                            Title = "The Dark Knight",
                            TrailerUrl = "https://www.youtube.com/watch?v=EXeTwQWrcwY"
                        },
                        new
                        {
                            Id = 13,
                            BackgroundPoster = "https://images4.alphacoders.com/645/thumb-1920-645704.jpeg",
                            Description = "In a near future, a lonely writer develops an unlikely relationship with an operating system designed to meet his every need.",
                            ImdbRatio = "8.0",
                            IsForKids = false,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2018/05/AMP_Her.png",
                            ProductionYear = 2013,
                            Title = "Her",
                            TrailerUrl = "https://www.youtube.com/watch?v=ne6p6MfLBxc"
                        },
                        new
                        {
                            Id = 14,
                            BackgroundPoster = "https://images.alphacoders.com/204/thumb-1920-204781.jpg",
                            Description = "An insomniac office worker and a devil-may-care soap maker form an underground fight club that evolves into much more.",
                            ImdbRatio = "8.8",
                            IsForKids = false,
                            PosterPath = "https://i.pinimg.com/736x/2e/0c/ee/2e0ceec2f8bc16b562a8cec2d4d1b86f.jpg",
                            ProductionYear = 1999,
                            Title = "Fight Club",
                            TrailerUrl = "https://www.youtube.com/watch?v=O1nDozs-LxI"
                        },
                        new
                        {
                            Id = 15,
                            BackgroundPoster = "https://c4.wallpaperflare.com/wallpaper/580/168/4/movie-se7en-brad-pitt-wallpaper-preview.jpg",
                            Description = "Two detectives, a rookie and a veteran, hunt a serial killer who uses the seven deadly sins as his motives.",
                            ImdbRatio = "8.6",
                            IsForKids = false,
                            PosterPath = "https://i.pinimg.com/originals/9a/6b/92/9a6b929842b8affe801112608266087b.jpg",
                            ProductionYear = 1995,
                            Title = "Se7en",
                            TrailerUrl = "https://www.youtube.com/watch?v=znmZoVkCjpI"
                        },
                        new
                        {
                            Id = 16,
                            BackgroundPoster = "https://www.axn.pl/sites/pl.fern.axn/files/ct_movie_f_primary_image/socialnetwork.jpg",
                            Description = "As Harvard student Mark Zuckerberg creates the social networking site that would become known as Facebook, he is sued by the twins who claimed he stole their idea, and by the co-founder who was later squeezed out of the business.",
                            ImdbRatio = "7.8",
                            IsForKids = false,
                            PosterPath = "https://i.pinimg.com/originals/df/1b/a2/df1ba2a4e5d4f8a99a323261df3be7ee.jpg",
                            ProductionYear = 2010,
                            Title = "The Social Network",
                            TrailerUrl = "https://www.youtube.com/watch?v=lB95KLmpLR4"
                        },
                        new
                        {
                            Id = 17,
                            BackgroundPoster = "https://www.highonfilms.com/wp-content/uploads/2017/10/zodiac-downey-gyllenhaal.jpg",
                            Description = "Between 1968 and 1983, a San Francisco cartoonist becomes an amateur detective obsessed with tracking down the Zodiac Killer, an unidentified individual who terrorizes Northern California with a killing spree.",
                            ImdbRatio = "7.7",
                            IsForKids = false,
                            PosterPath = "https://64.media.tumblr.com/0d4d9f32780322b9c0fe71857904d6cf/11a1f8baccb49d40-8b/s540x810/2b46dc8aaa865250e899a5fb42eedf47de4d6823.jpg",
                            ProductionYear = 2007,
                            Title = "Zodiac",
                            TrailerUrl = "https://www.youtube.com/watch?v=yNncHPl1UXg"
                        },
                        new
                        {
                            Id = 18,
                            BackgroundPoster = "https://images.squarespace-cdn.com/content/v1/51b3dc8ee4b051b96ceb10de/911c7616-5036-4b64-9039-77ce53af8f52/limited-edition-poster-art-for-doctor-strange-in-the-multiverse-of-madness-from-artist-matt-ferguson.jpg",
                            Description = "Dr. Stephen Strange casts a forbidden spell that opens the doorway to the multiverse, including alternate versions of himself, whose threat to humanity is too great for the combined forces of Strange, Wong, and Wanda Maximoff.",
                            ImdbRatio = "7.6",
                            IsForKids = true,
                            PosterPath = "https://alternativemovieposters.com/wp-content/uploads/2019/09/knotek_drstrange.jpg",
                            ProductionYear = 2022,
                            Title = "Doctor Strange in the Multiverse of Madness",
                            TrailerUrl = "https://www.youtube.com/watch?v=aWzlQ2N6qqg"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.RoleModel", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Actor"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Director"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.SeasonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int");

                    b.Property<int>("TvSeriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TvSeriesId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("DataAccess.Models.TvSeriesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BackgroundPoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValue("Nie dodano jeszcze żadnego opisu.");

                    b.Property<int>("EndYear")
                        .HasColumnType("int")
                        .HasColumnName("End_Year");

                    b.Property<string>("ImdbRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartYear")
                        .HasColumnType("int")
                        .HasColumnName("Start_Year");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TvSeries");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.Movie_CreativeP_Role", b =>
                {
                    b.HasOne("DataAccess.Models.CreativePersonModel", "CreativePerson")
                        .WithMany("RoleCreativeMovie")
                        .HasForeignKey("CreativePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.MovieModel", "Movie")
                        .WithMany("RoleCreativeMovie")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.RoleModel", "Role")
                        .WithMany("RoleCreativeMovie")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreativePerson");

                    b.Navigation("Movie");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.MovieGenre", b =>
                {
                    b.HasOne("DataAccess.Models.GenreModel", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.MovieModel", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.TvSeries_CreativeP_Role", b =>
                {
                    b.HasOne("DataAccess.Models.CreativePersonModel", "CreativePerson")
                        .WithMany("TvSeries_CreativeP_Role")
                        .HasForeignKey("CreativePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.RoleModel", "Role")
                        .WithMany("TvSeries_CreativeP_Role")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.TvSeriesModel", "TvSeries")
                        .WithMany("TvSeries_CreativeP_Role")
                        .HasForeignKey("TvSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreativePerson");

                    b.Navigation("Role");

                    b.Navigation("TvSeries");
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.TvSeriesGenre", b =>
                {
                    b.HasOne("DataAccess.Models.GenreModel", "Genre")
                        .WithMany("TvSeriesGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.TvSeriesModel", "TvSeries")
                        .WithMany("TvSeriesGenres")
                        .HasForeignKey("TvSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("TvSeries");
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.UserFavoriteMovies", b =>
                {
                    b.HasOne("DataAccess.Models.MovieModel", "Movie")
                        .WithMany("UserFavoriteMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserFavoriteMovies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DataAccess.Models.EntityAssigments.UserFavoriteTvSeries", b =>
                {
                    b.HasOne("DataAccess.Models.TvSeriesModel", "TvSeries")
                        .WithMany("UserFavoriteTvSeries")
                        .HasForeignKey("TvSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserFavoriteTvSeries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("TvSeries");
                });

            modelBuilder.Entity("DataAccess.Models.EpisodeModel", b =>
                {
                    b.HasOne("DataAccess.Models.SeasonModel", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("DataAccess.Models.SeasonModel", b =>
                {
                    b.HasOne("DataAccess.Models.TvSeriesModel", "TvSeries")
                        .WithMany("Seasons")
                        .HasForeignKey("TvSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvSeries");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DataAccess.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DataAccess.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DataAccess.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Models.ApplicationUser", b =>
                {
                    b.Navigation("UserFavoriteMovies");

                    b.Navigation("UserFavoriteTvSeries");
                });

            modelBuilder.Entity("DataAccess.Models.CreativePersonModel", b =>
                {
                    b.Navigation("RoleCreativeMovie");

                    b.Navigation("TvSeries_CreativeP_Role");
                });

            modelBuilder.Entity("DataAccess.Models.GenreModel", b =>
                {
                    b.Navigation("MovieGenres");

                    b.Navigation("TvSeriesGenres");
                });

            modelBuilder.Entity("DataAccess.Models.MovieModel", b =>
                {
                    b.Navigation("MovieGenres");

                    b.Navigation("RoleCreativeMovie");

                    b.Navigation("UserFavoriteMovies");
                });

            modelBuilder.Entity("DataAccess.Models.RoleModel", b =>
                {
                    b.Navigation("RoleCreativeMovie");

                    b.Navigation("TvSeries_CreativeP_Role");
                });

            modelBuilder.Entity("DataAccess.Models.SeasonModel", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("DataAccess.Models.TvSeriesModel", b =>
                {
                    b.Navigation("Seasons");

                    b.Navigation("TvSeriesGenres");

                    b.Navigation("TvSeries_CreativeP_Role");

                    b.Navigation("UserFavoriteTvSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
